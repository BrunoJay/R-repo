cars
head(cars)
mtcars
library("gplots")
library("gplots")
plot(cars)
plot(header(cars))
plot(head(cars))
scatter.smooth(cars)
cars
scatter.smooth(x=cars$speed, y=cars$dist)
scatter.smooth(cars$speed, cars$dist)
scatter.smooth(cars$speed, cars$dist)
mtcars
scatter.smooth(y=cars$dist, x=cars$speed)
pplot(cars)
plot(cars)
plot(y=cars$dist, x=cars$speed)
scatter.smooth(y=cars$dist, x=cars$speed)
scatter.smooth(cars)
scatter.smooth(y=cars$speed, x=cars$dist)
scatter.smooth(y=cars$dist, x=cars$speed)
scatter.smooth(y=cars$dist, x=cars$speed)
main="Scatter graph showing distance against speed of cars"
scatter.smooth(y=cars$dist, x=cars$speed)
title(main = "Scatter graph showing distance against speed of cars")
scatter.smooth(y=cars$dist, x=cars$speed, lty=2)
scatter.smooth(y=cars$dist, x=cars$speed, lty=100)
scatter.smooth(y=cars$dist, x=cars$speed, lty='100')
scatter.smooth(y=cars$dist, x=cars$speed, lty='2')
scatter.smooth(y=cars$dist, x=cars$speed)
title(main = "Scatter graph showing distance against speed of cars")
scatter.smooth(y=cars$dist, x=cars$speed, lwd='2')
scatter.smooth(y=cars$dist, x=cars$speed, lwd='1')
boxplot(cars)
boxplot(cars$dist)
boxplot(cars$dist, sub(paste("outlier", boxplot.stats(car$dist)$out)))
boxplot(cars$dist, sub(paste("outlier"), boxplot.stats(car$dist)$out))
boxplot(cars$dist, sub(paste("outlier", boxplot.stats(car$dist)$out)))
boxplot(cars$dist, sub(paste("outlier", boxplot.stats(car$dist)$out)))
boxplot(cars$dist, sub(paste("outlier", boxplot.stats(car$dist)$out)))
boxplot(cars$dist, sub(paste("outlier:", boxplot.stats(car$dist)$out)))
boxplot(cars$dist, sub=paste("outlier", boxplot.stats(car$dist)$out))
boxplot(cars$dist, sub=paste("outlier", boxplot.stats(cars$dist)$out))
boxplot(cars$speed, sub=paste("outlier:", boxplot.stats(cars$speed)$out))
boxplot(cars$speed, sub=paste("outlier:", boxplot.stats(cars$speed)$out))
boxplot(cars$speed)
boxplot(cars$dist)
boxplot(cars$speed)
boxplot(cars$speed, sub=paste("outlier:", boxplot.stats(cars$speed)$out))
title(main = "Scatter graph showing distance against speed")
boxplot(cars$speed, sub=paste("outlier:", boxplot.stats(cars$speed)$out))
boxplot(cars)
boxplot(cars$speed, sub=paste("outlier:", boxplot.stats(cars$speed)$out))
par()
par(mfrow)
par(mfrow=c)
scatter.smooth(y=cars$dist, x=cars$speed, col='red')
boxplot(cars$dist, sub(paste("outlier", boxplot.stats(car$dist)$out)))
boxplot(cars$speed, sub=paste("outlier:", boxplot.stats(cars$speed)$out))
#change color of points
scatter.smooth(y=cars$dist, x=cars$speed, col='red')
boxplot(cars$speed, sub=paste("outlier:", boxplot.stats(cars$speed)$out))
par(mfrow=c(1:3))
par(mfrow=c(1:2))
par(mfrow=c(1:2))
boxplot(cars$speed, sub=paste("outlier:", boxplot.stats(cars$speed)$out))
boxplot(cars$dist, sub=paste("outlier:", boxplot.stats(cars$dist)$out))
install.packages("e1071")
install.packages("E1071")
install.packages("e1071")
plot(density(cars$dist))
install.packages("e1071")
plot(density(cars$dist))
par(mfrow=c(1:1))
par(mfrow=c(1:0))
par(mfrow=c(1:1))
par(mfrow=c(1:2))
polygon(density(cars$dist))
polygon(density(cars$dist))
plot(density(cars$dist)main="density distance graph")
plot(density(cars$dist), main="density distance graph")
plot(density(cars$dist), main="density distance graph")
polygon(density(cars$dist), col = "red")
polygon(density(cars$dist), col = "blue")
polygon(density(cars$dist), cor())
cor(cars$speed)
cor(x=cars$speed,y=cars$dist)
hist(cars$speed)
hist(cars$speed)
title(main = "Histogram")
hist(cars$speed, main = "Histogram")
#plotting a histogram
hist(cars$speed, main = "Histogram showing speed")
lm(dist ~ speed, data=cars)
print(myfirstmodel)
myfirstmodel <- lm(dist ~ speed, data=cars)
print(myfirstmodel)
cars93
mtcars
pbc
install.packages("plotrix")
print(data)
#set working dir
setwd("C:\Users\BRUNO ZOE\Desktop\R practice")
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
data<- read.csv(file = "by-provider-14-15-daycase-costs", header = TRUE, sep = ",")
data<- read.csv(file = "by-provider-14-15-daycase-costs.csv", header = TRUE, sep = ",")
print(data)
print(data$Belfast.City)
summary(data)
mymodel<- lm(Belfast.city~Causeway, data = healthData)
healthData<- read.csv(file = "by-provider-14-15-daycase-costs.csv", header = TRUE, sep = ",")
mymodel<- lm(Belfast.city~Causeway, data = healthData)
healthData<- read.csv(file = "by-provider-14-15-daycase-costs.csv", header = TRUE, sep = ",")
print(healthData)
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
healthData<- read.csv(file = "by-provider-14-15-daycase-costs.csv", header = TRUE, sep = ",")
print(healthData)
print(healthData$Belfast.City)
mymodel<- lm(Belfast.city ~ Causeway, data = healthData)
print(healthData)
mymodel<- lm(Belfast.City ~ Causeway, data = healthData)
healthData<- read.csv(file = "Train.csv", header = TRUE, sep = ",")
print(healthData)
print(healthData$Item_Fat_Content)
print(healthData$Item_Weight)
print(healthData$Item_Outlet_Sales)
mymodel<- lm(Item_Weight ~ Item_Outlet_Sales, data = healthData)
print(mymodel)
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
#Load library
library(plotrix)
healthData<- read.csv(file = "Train.csv", header = TRUE, sep = ",")
info = head(healthData)
print(info)
label= info$Outlet_Type
chart= round(info$Item_Outlet_Sales/sum(info$Item_Outlet_Sales)*100)
label= paste(label, chart)
label= paste(label, "%", sep = "")
pie3D(info$Item_Outlet_Sales,
labels = label,
explode = 0.1,
col= c("cyan", "orange", "purple", "black", "maroon", "magenta"))
pie3D(info$Item_Outlet_Sales,
labels = label,
explode = 0.1,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
print(healthData)
print(healthData$Item_Weight)
print(healthData$Item_Outlet_Sales)
#summary(healthData)
mymodel<- lm(Item_Weight ~ Item_Outlet_Sales, data = healthData)
print(mymodel)
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
#Load library
library(plotrix)
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
info = head(healthData)
print(info)
label= info$Outlet_Type
chart= round(info$Item_Outlet_Sales/sum(info$Item_Outlet_Sales)*100)
label= paste(label, chart)
label= paste(label, "%", sep = "")
pie3D(info$Item_Outlet_Sales,
labels = label,
explode = 0.1,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
mymodel<- lm(Item_Weight ~ Item_Outlet_Sales, data = healthData)
pie3D(info$Item_Outlet_Sales,
labels = label,
explode = 0.1,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
pie3D(info$Item_Outlet_Sales,
labels = label,
explode = 0.3,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
pie3D(info$Item_Outlet_Sales,
labels = label,
explode = 0,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
pie3D(info$Item_Outlet_Sales,
labels = label,
explode = 0.05,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
pie3D(info$Item_Outlet_Sales,
labels = label,
explode = 0.15,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
print(healthData)
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
#Load library
library(plotrix)
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
info = head(healthData)
print(info)
#labels
label= info$Item_Type
label= paste(label, chart)
label= paste(label, "%", sep = "")
chart= round(info$Item_MRP/sum(info$Item_MRP)*100)
pie3D(info$Item_MRP,
labels = label,
explode = 0.15,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
title = main("Piechart")
pie3D(info$Item_MRP,
main = "Piechart",
labels = label,
explode = 0.15,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
pie3D(info$Item_MRP,
main = "Piechart showing MRP in different types of Products",
labels = label,
explode = 0.15,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
label= info$Item_Type
label= paste(label, chart)
label= paste(label, "%", sep = "  ")
chart= round(info$Item_MRP/sum(info$Item_MRP)*100)
pie3D(info$Item_MRP,
main = "Piechart showing MRP of different types of Products",
labels = label,
explode = 0.15,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
#Load library
library(plotrix)
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
info = head(healthData)
print(info)
#labels
label= info$Item_Type
label= paste(label, chart)
label= paste(label, "%", sep = "")
chart= round(info$Item_MRP/sum(info$Item_MRP)*100)
pie3D(info$Item_MRP,
main = "Piechart showing MRP of different types of Products",
labels = label,
explode = 0.15,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
print(info)
mymodel<- lm.influence(Item_Weight ~ Item_Outlet_Sales, data = healthData)
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
mymodel<- lm.influence(Item_Weight ~ Item_Outlet_Sales, data = healthData)
mymodel<- lm.influence(healthData$Item_Weight ~ healthData$Item_Outlet_Sales)
mymodel<- lm(Item_Weight ~ Item_Outlet_Sales, data = healthData)
print(mymodel)
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
#Load library
library(plotrix)
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
info = head(healthData)
print(info)
#labels
label= info$Item_Type
label= paste(label, chart)
label= paste(label, "%", sep = "")
chart= round(info$Item_MRP/sum(info$Item_MRP)*100)
pie3D(info$Item_MRP,
main = "Piechart showing MRP of different types of Products",
labels = label,
explode = 0.15,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
print(healthData)
print(healthData$Item_Weight)
print(healthData$Item_Outlet_Sales)
#summary(healthData)
mymodel<- lm(Item_Weight ~ Item_Outlet_Sales, data = healthData)
print(mymodel)
pie3D(info$Item_MRP,
main = "Piechart showing MRP of different types of Products",
labels = label,
explode = 0.15,
col= c("blue", "orange", "green", "red", "purple", "yellow"))
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
install.packages("survival")
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
mymodel<- glm(Item_Weight ~ Item_Outlet_Sales, data = healthData, family = binomial)
print(healthData)
mymodel<- glm(Item_Weight ~ Item_Visibility, data = healthData, family = binomial)
mymodel<- glm(Item_Visibility ~ Item_Weight, data = healthData, family = binomial)
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
mymodel<- glm(Item_Visibility ~ Item_Weight, data = healthData, family = binomial)
print(healthData)
print(healthData$Item_Weight)
print(healthData)
mymodel<- glm(Outlet_Establishment_Year  ~ Item_Weight, data = healthData, family = binomial)
mymodel<- glm(Item_Visibility ~ Outlet_Establishment_Year , data = healthData, family = binomial)
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
mymodel<- glm(Item_Visibility ~ Outlet_Establishment_Year , data = healthData, family = binomial)
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
healthData<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
print(healthData)
print(healthData$Item_Weight)
print(healthData$Item_Outlet_Sales)
#summary(healthData)
mymodel<- glm(Item_Visibility ~ Item_Weight, data = healthData, family = binomial)
summary(mymodel)
print(mymodel)
installed.packages("survival")
installed.packages("survival")
#set working dir
setwd("C:/Users/BRUNO ZOE/Desktop/R practice")
installed.packages("survival")
library("survival")
data<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
survfit(data$Item_MRP)
survfit(Surv(data$Item_MRP))
library("MASS")
Cars93
mydata <- Cars93
data<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
survfit(Surv(data$Item_MRP))
library("MASS")
library("survival")
print(structure(mydata))
print(structure(Cars93))
data<- read.csv(file = "foods.csv", header = TRUE, sep = ",")
survfit(Surv(data$Item_MRP)~1)
plot(survfit(Surv(data$Item_MRP)~1))
#print(structure(Cars93))
survfit(Surv(Cars93$Min.Price,Cars93$Max.Price == 2)~1)
#print(structure(Cars93))
survfit(Surv(Cars93$Min.Price,Cars93$Max.Price == 18)~1)
#print(structure(Cars93))
survfit(Surv(Cars93$Min.Price,Cars93$Max.Price == 0)~1)
#print(structure(Cars93))
survfit(Surv(Cars93$Min.Price,Cars93$Max.Price)~1)
#print(structure(Cars93))
survfit(Surv(Cars93$Min.Price)~1)
#print(structure(Cars93))
sf <- survfit(Surv(Cars93$Min.Price)~1)
plot(sf)
#print(structure(Cars93))
sf <- survfit(Surv(Cars93$MPG.highway)~1)
plot(sf)
Min.Price
survfit(Surv(Cars93$Min.Price)~1)
plot(sf)
#print(structure(Cars93))
sf <- survfit(Surv(Cars93$Min.Price)~1)
plot(sf)
#print(structure(Cars93))
sf <- survfit(Surv(Cars93$Min.Price)~1)
plot(sf)
#Give the chart a file name
png(file = "survival.png")
#save the file
dev.off
chisq.test(data)
chisq.test(Cars93)
cars.data <- data.frame(Cars93$AirBags,Cars93$Type)
chisq.test(cars.data)
#Create a table with the needed variables
car.data <- data.frame(Cars93$AirBags,Cars93$Type)
print(car.data)
print(chisq.test(car.data))
#CHI SQUARE TEST
library("MASS")
print(chisq.test(car.data))
#Create data frame from the main data set
car.data <- data.frame(Cars93$AirBags,Cars93$Type)
#Create a table with the needed variables
car.data = table(Cars93$AirBags,Cars93$Type)
print(car.data)
print(chisq.test(car.data))
#CHI SQUARE TEST
library("MASS")
